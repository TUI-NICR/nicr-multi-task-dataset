stages:
  - stylecheck
  - test
  - deploy

.conda_env: &conda_env
    before_script:
        # update conda
        - conda config --set always_yes yes
        - conda update -q conda

        # create and activate environment
        - conda create -q -n testenv_${CI_PIPELINE_ID}_${CI_JOB_NAME}_py${PYTHON_VERSION_TO_USE//./} python=${PYTHON_VERSION_TO_USE}
        - source activate testenv_${CI_PIPELINE_ID}_${CI_JOB_NAME}_py${PYTHON_VERSION_TO_USE//./}
    after_script:
        # remove environment
        - conda env remove --name testenv_${CI_PIPELINE_ID}_${CI_JOB_NAME}_py${PYTHON_VERSION_TO_USE//./}

.test_template: &test_template
    <<: *conda_env
    stage: test
    only:
        - triggers
        - master
        - schedules
    script:
        # install packages (use conda to avoid time-consuming installations)
        - conda install -q pytest pytest-cov
        - pip install -q pytest-html

        # check conda installation
        - conda info
        - conda list

        # install package (and all missing dependencies)
        - pip install -q --editable .[test]

        # test package (opt: get coverage)
        - |
          if [ "${REPORT_COVERAGE}" == "true" ]; then
              py.test tests/ -rx -s --cov=${CI_PROJECT_NAME//-/_} --cov-fail-under 80 --cov-report html --cov-report term --html=report_py${PYTHON_VERSION_TO_USE//./}.html --self-contained-html
          else
              py.test tests/ -rx -s --html=report_py${PYTHON_VERSION_TO_USE//./}.html --self-contained-html
          fi
    coverage: '/^TOTAL.*\s+(\d+\%)$/'
    artifacts:
        when: always
        paths:
            - report_py${PYTHON_VERSION_TO_USE//./}.html
            - htmlcov

style_check:
    <<: *conda_env
    stage: stylecheck
    only:
        - triggers
        - master
        - schedules
    variables:
        PYTHON_VERSION_TO_USE: "3.6"
    script:
        # install packages
        - conda install -q pycodestyle pylint

        # check style using pep8
        - pycodestyle --show-source --show-pep8 .

        # check style using pylint (without taking into account)
        - pylint ${CI_PROJECT_NAME//-/_} --rcfile=${CI_PROJECT_DIR}/.pylintrc || true

update_pip_package:
    stage: deploy
    only:
        - master
    script:
        # upload package
        - python setup.py sdist upload -r localpypiserver
